<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <link rel="icon" href="/logo.png">
  <title>Leaderboard - FRCStats</title>
  <style>
    body {
      margin: 20px;
    }
    h1 {
      text-align: center;
    }
    table {
      width: 90%;
      margin: 20px auto;
      border-collapse: collapse;
      background-color: #131313;
      box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
    }
    th, td {
      padding: 12px;
      text-align: center;
      border: 1px solid #ddd;
    }
    tr:nth-child(even) {
      background-color: #1d1d1d;
    }
    th {
      background-color: #4CAF50;
      color: white;
    }
    .error {
      color: red;
      text-align: center;
    }
    .pagination {
      text-align: center;
      margin: 20px 0;
    }
    .pagination button {
      padding: 5px 10px;
      margin: 0 5px;
      cursor: pointer;
    }
    .pagination button:disabled {
      cursor: not-allowed;
      opacity: 0.5;
    }
    .pagination select {
      padding: 5px;
      margin: 0 10px;
    }
  </style>
  <link rel="stylesheet" href="/style.css">
</head>
<body>
  <div class="header">
    <a href="/index.html" class="home">Home</a>
    <h1>FRC Leaderboard</h1>
    <p>Updates Daily</p>
  </div>
  <table>
    <thead>
      <tr>
        <th>Rank</th>
        <th>Team Number</th>
        <th>Team Name</th>
        <th>Wins</th>
        <th>Losses</th>
        <th>Ties</th>
        <th>Win/Loss Ratio</th>
        <th>Total Matches</th>
      </tr>
    </thead>
    <tbody id="leaderboard-body">
    </tbody>
  </table>
  <label for="items-per-page">Items per page:</label>
  <select id="items-per-page">
    <option value="50">50</option>
    <option value="100">100</option>
    <option value="250">250</option>
    <option value="500">500</option>
    <option value="EveryTeam">Every Team</option>
  </select>
  <div class="pagination">
    <button id="prev-btn">Previous</button>
    <span id="page-info"></span>
    <button id="next-btn">Next</button>
  </div>
  <p id="error" class="error" style="display: none;"></p>

  <script>
    let currentPage = 1;
    let totalPages = 1;
    let limit = 50;
    let totalItems = 0;

    async function fetchLeaderboard(page = 1, itemsPerPage = limit) {
      try {
        const effectiveLimit = itemsPerPage === 'EveryTeam' ? 999999 : itemsPerPage;
        const response = await fetch(`/api/leaderboard?page=${page}&limit=${effectiveLimit}`);
        const result = await response.json();

        if (response.ok) {
          const tbody = document.getElementById('leaderboard-body');
          tbody.innerHTML = '';

          result.data.forEach(team => {
            const row = document.createElement('tr');
            row.innerHTML = `
              <td>${team.rank}</td>
              <td>${team.teamNumber}</td>
              <td>${team.teamName}</td>
              <td>${team.wins}</td>
              <td>${team.losses}</td>
              <td>${team.ties}</td>
              <td>${team.winLossRatio}</td>
              <td>${team.totalMatches}</td>
            `;
            tbody.appendChild(row);
          });

          currentPage = result.page;
          totalPages = result.totalPages;
          totalItems = result.totalItems;
          limit = itemsPerPage === 'EveryTeam' ? totalItems : itemsPerPage;
          updatePaginationControls();
        } else {
          throw new Error(result.error || 'Failed to load leaderboard');
        }
      } catch (error) {
        console.error('Error fetching leaderboard:', error);
        const errorElement = document.getElementById('error');
        errorElement.textContent = 'Error loading leaderboard: ' + error.message;
        errorElement.style.display = 'block';
      }
    }

    function updatePaginationControls() {
      const prevBtn = document.getElementById('prev-btn');
      const nextBtn = document.getElementById('next-btn');
      const pageInfo = document.getElementById('page-info');

      pageInfo.textContent = `Page ${currentPage} of ${totalPages}`;
      prevBtn.disabled = currentPage === 1;
      nextBtn.disabled = currentPage === totalPages || limit === totalItems;
    }

    document.getElementById('prev-btn').addEventListener('click', () => {
      if (currentPage > 1) {
        fetchLeaderboard(currentPage - 1, limit);
      }
    });

    document.getElementById('next-btn').addEventListener('click', () => {
      if (currentPage < totalPages && limit !== totalItems) {
        fetchLeaderboard(currentPage + 1, limit);
      }
    });

    document.getElementById('items-per-page').addEventListener('change', (e) => {
      limit = e.target.value === 'EveryTeam' ? 'EveryTeam' : parseInt(e.target.value);
      currentPage = 1;
      fetchLeaderboard(currentPage, limit);
    });

    window.onload = () => fetchLeaderboard(currentPage, limit);
  </script>
</body>
</html>